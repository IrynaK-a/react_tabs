{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","_ref","tabs","selectedTabId","handleTabSelection","selectedTab","find","tab","id","_jsxs","children","_jsx","className","map","href","concat","onClick","handleClick","title","content","App","_tabs$find","_useState","useState","_useState2","_slicedToArray","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"iMAQaA,EAAwB,SAAHC,GAM5B,IAJFC,EAAID,EAAJC,KACAC,EAAaF,EAAbE,cACAC,EAAkBH,EAAlBG,mBAGIC,EAAcH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,CAAa,KAAKD,EAAK,GAUvE,OACEO,eAAA,OAAK,UAAQ,gBAAeC,SAAA,CAC1BC,cAAA,OAAKC,UAAU,gBAAeF,SAC5BC,cAAA,MAAAD,SACGR,EAAKW,KAAI,SAAAN,GAAG,OACXI,cAAA,MACEC,UACEP,EAAYG,KAAOD,EAAIC,GAAK,YAAc,GAE5C,UAAQ,MAAKE,SAGbC,cAAA,KACEG,KAAI,IAAAC,OAAMR,EAAIC,IACd,UAAQ,UACRQ,QAAS,kBAvBH,SAClBT,GAEIJ,IAAkBI,EAAIC,IACxBJ,EAAmBG,EAEvB,CAiB6BU,CAAYV,EAAI,EAACG,SAE/BH,EAAIW,SAPFX,EAAIC,GASN,QAKXG,cAAA,OAAKC,UAAU,QAAQ,UAAQ,aAAYF,SACxCL,EAAYc,YAIrB,EC/CajB,EAAc,CACzB,CAAEM,GAAI,QAASU,MAAO,QAASC,QAAS,eACxC,CAAEX,GAAI,QAASU,MAAO,QAASC,QAAS,eACxC,CAAEX,GAAI,QAASU,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAAO,IAADC,EACjCC,EAA0CC,mBAASrB,EAAK,GAAGM,IAAGgB,EAAAC,YAAAH,EAAA,GAAvDnB,EAAaqB,EAAA,GAAEE,EAAgBF,EAAA,GAMhCnB,EAA0D,QAA/CgB,EAAGnB,EAAKI,MAAK,SAACC,GAAG,OAAKA,EAAIC,KAAOL,CAAa,WAAC,IAAAkB,IAAInB,EAAK,GAEzE,OACEO,eAAA,OAAKG,UAAU,UAASF,SAAA,CACtBC,cAAA,MAAIC,UAAU,QAAOF,SAAA,mBAAAK,OAAqBV,EAAYa,SAEtDP,cAACX,EAAI,CACHE,KAAMA,EACNC,cAAeA,EACfC,mBAbgB,SAACG,GACrBmB,EAAiBnB,EAAIC,GACvB,MAeF,EC9BAmB,IAASC,OAAOjB,cAACS,EAAG,IAAKS,SAASC,eAAe,Q","file":"static/js/main.3c3fdb8d.chunk.js","sourcesContent":["import { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[],\n  selectedTabId: string,\n  handleTabSelection: (tab: Tab) => void\n};\n\nexport const Tabs: React.FC<Props> = (\n  {\n    tabs,\n    selectedTabId,\n    handleTabSelection,\n  },\n) => {\n  const selectedTab = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n\n  const handleClick = (\n    tab: Tab,\n  ) => {\n    if (selectedTabId !== tab.id) {\n      handleTabSelection(tab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              className={\n                selectedTab.id === tab.id ? 'is-active' : ''\n              }\n              data-cy=\"Tab\"\n              key={tab.id}\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => handleClick(tab)}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/Tab';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  const onTabSelected = (tab: Tab) => {\n    setSelectedTabId(tab.id);\n  };\n\n  const selectedTab = tabs.find((tab) => tab.id === selectedTabId) ?? tabs[0];\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">{`Selected tab is ${selectedTab.title}`}</h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        handleTabSelection={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}